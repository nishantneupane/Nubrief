{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/nishantneupane/Documents/newsletter-app/pages/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nexport default function LandingPage() {\n    const [email, setEmail] = useState(\"\");\n    const [categories, setCategories] = useState([]);\n    const [frequency, setFrequency] = useState(\"daily\");\n    const [message, setMessage] = useState(\"\");\n    const router = useRouter();\n\n    const allCategories = [\"business\", \"tech\", \"sports\", \"entertainment\", \"science\", \"general\", \"health\", \"food\", \"travel\", \"politics\"];\n    ;\n\n    const handleCategoryChange = (category) => {\n        setCategories(prev =>\n            prev.includes(category) ? prev.filter(c => c !== category) : [...prev, category]\n        );\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || categories.length === 0) {\n            setMessage(\"‚ùå Please enter an email and select at least one category.\");\n            return;\n        }\n\n        const response = await fetch(\"/api/subscribe\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, categories, frequency }),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n            setMessage(\"‚úÖ Successfully subscribed!\");\n            setEmail(\"\");\n            setCategories([]);\n            setFrequency(\"daily\");\n        } else {\n            setMessage(`‚ùå Error: ${data.error}`);\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1>üì® Welcome to News Digest!</h1>\n            <p>Stay updated with curated news delivered straight to your inbox.</p>\n\n            <form onSubmit={handleSubmit} style={styles.form}>\n                <label style={styles.label}>Email:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    style={styles.input}\n                />\n\n                <label style={styles.label}>News Categories:</label>\n                <div style={styles.checkboxContainer}>\n                    {allCategories.map((category) => (\n                        <label key={category} style={styles.checkboxLabel}>\n                            <input\n                                type=\"checkbox\"\n                                value={category}\n                                checked={categories.includes(category)}\n                                onChange={() => handleCategoryChange(category)}\n                            />\n                            {\" \"}{category}\n                        </label>\n                    ))}\n                </div>\n\n                <label style={styles.label}>News Frequency:</label>\n                <select value={frequency} onChange={(e) => setFrequency(e.target.value)} style={styles.input}>\n                    <option value=\"daily\">Daily</option>\n                    <option value=\"weekly\">Weekly</option>\n                </select>\n\n                <button type=\"submit\" style={styles.button}>Subscribe</button>\n            </form>\n\n            {message && <p style={{ marginTop: \"10px\", color: message.includes(\"‚úÖ\") ? \"green\" : \"red\" }}>{message}</p>}\n\n            <div style={{ marginTop: \"20px\" }}>\n                <a href=\"/unsubscribe\" style={styles.unsubscribeLink}>‚ùå Unsubscribe</a>\n            </div>\n        </div>\n    );\n}\n\n// Inline styles\nconst styles = {\n    container: {\n        maxWidth: \"500px\",\n        margin: \"50px auto\",\n        textAlign: \"center\",\n        fontFamily: \"Arial, sans-serif\",\n        padding: \"20px\",\n        backgroundColor: \"#f9f9f9\",\n        borderRadius: \"10px\",\n        boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\",\n    },\n    form: {\n        textAlign: \"left\",\n        padding: \"20px\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#fff\",\n    },\n    label: {\n        fontWeight: \"bold\",\n        display: \"block\",\n        marginBottom: \"5px\",\n    },\n    input: {\n        width: \"100%\",\n        padding: \"8px\",\n        marginBottom: \"10px\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"5px\",\n    },\n    checkboxContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginBottom: \"10px\",\n    },\n    checkboxLabel: {\n        marginRight: \"10px\",\n        fontSize: \"14px\",\n    },\n    button: {\n        width: \"100%\",\n        padding: \"10px\",\n        backgroundColor: \"#007bff\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n    },\n    unsubscribeLink: {\n        color: \"#dc3545\",\n        fontWeight: \"bold\",\n        textDecoration: \"none\",\n    }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}